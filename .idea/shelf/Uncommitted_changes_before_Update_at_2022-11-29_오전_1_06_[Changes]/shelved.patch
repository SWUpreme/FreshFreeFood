Index: app/src/main/java/com/example/fffroject/AlertReceiver.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.fffroject\r\n\r\nimport android.app.NotificationChannel\r\nimport android.app.NotificationManager\r\nimport android.app.PendingIntent\r\nimport android.content.BroadcastReceiver\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport android.graphics.Color\r\nimport androidx.core.app.NotificationCompat\r\nimport android.media.RingtoneManager\r\nimport android.util.Log\r\nimport java.util.*\r\n\r\n//AlertReceiver class에서 알림 기능을 동작하도록\r\nclass AlertReceiver  : BroadcastReceiver() {\r\n    lateinit var notificationManager: NotificationManager\r\n    override fun onReceive(context: Context, intent: Intent) {\r\n        notificationManager = context.getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager\r\n\r\n        createNotificationChannel(context)\r\n        deliverNotification(context)\r\n    }\r\n\r\n    private fun createNotificationChannel(context: Context){\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n            val notificationChannel = NotificationChannel(\r\n                CHANNEL_ID, // 채널의 아이디\r\n                CHANNEL_NAME, // 채널의 이름\r\n                NotificationManager.IMPORTANCE_HIGH\r\n                /*\r\n                1. IMPORTANCE_HIGH = 알림음이 울리고 헤드업 알림으로 표시\r\n                2. IMPORTANCE_DEFAULT = 알림음 울림\r\n                3. IMPORTANCE_LOW = 알림음 없음\r\n                4. IMPORTANCE_MIN = 알림음 없고 상태줄 표시 X\r\n                 */\r\n            )\r\n            notificationChannel.enableLights(true) // 불빛\r\n            notificationChannel.lightColor = Color.RED // 색상\r\n            notificationChannel.enableVibration(true) // 진동 여부\r\n            notificationChannel.description = context.getString(R.string.app_name) // 채널 정보\r\n            notificationManager?.createNotificationChannel(\r\n                notificationChannel)\r\n        }\r\n    }\r\n\r\n    private fun deliverNotification(context: Context){\r\n        val contentIntent = Intent(context, FoodListActivity::class.java)\r\n        val contentPendingIntent = PendingIntent.getActivity(\r\n            context,\r\n            NOTIFICATION_ID, // requestCode\r\n            contentIntent, // 알림 클릭 시 이동할 인텐트\r\n            PendingIntent.FLAG_MUTABLE\r\n            /*\r\n            1. FLAG_UPDATE_CURRENT : 현재 PendingIntent를 유지하고, 대신 인텐트의 extra data는 새로 전달된 Intent로 교체\r\n            2. FLAG_CANCEL_CURRENT : 현재 인텐트가 이미 등록되어있다면 삭제, 다시 등록\r\n            3. FLAG_NO_CREATE : 이미 등록된 인텐트가 있다면, null\r\n            4. FLAG_ONE_SHOT : 한번 사용되면, 그 다음에 다시 사용하지 않음\r\n             */\r\n        )\r\n\r\n        val builder1 = NotificationCompat.Builder(context, CHANNEL_ID)\r\n            .setSmallIcon(R.drawable.ic_launcher_foreground) // 아이콘\r\n            .setContentTitle(\"FFF\") // 제목\r\n            .setContentText(\"냉장고\") // 내용\r\n            .setContentIntent(contentPendingIntent)\r\n            .setPriority(NotificationCompat.PRIORITY_HIGH)\r\n            .setAutoCancel(true)\r\n            .setDefaults(NotificationCompat.DEFAULT_ALL)\r\n        notificationManager?.notify(NOTIFICATION_ID, builder1.build())\r\n\r\n    }\r\n\r\n    companion object {\r\n        private const val NOTIFICATION_ID = 0\r\n        private const val CHANNEL_ID = \"channel_id\"\r\n        private const val CHANNEL_NAME = \"ChannelName\"\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/fffroject/AlertReceiver.kt b/app/src/main/java/com/example/fffroject/AlertReceiver.kt
--- a/app/src/main/java/com/example/fffroject/AlertReceiver.kt	(revision 5ee5066e244675fa357a364cefc1d87c3d7a5c93)
+++ b/app/src/main/java/com/example/fffroject/AlertReceiver.kt	(date 1669651564895)
@@ -11,12 +11,32 @@
 import androidx.core.app.NotificationCompat
 import android.media.RingtoneManager
 import android.util.Log
+import com.example.fffroject.fragment.FoodList
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.auth.FirebaseUser
+import com.google.firebase.firestore.FirebaseFirestore
+import com.google.firebase.firestore.Query
+import java.text.SimpleDateFormat
+import java.time.LocalDate
+import java.time.format.DateTimeFormatter
 import java.util.*
 
 //AlertReceiver class에서 알림 기능을 동작하도록
 class AlertReceiver  : BroadcastReceiver() {
+    var auth : FirebaseAuth? = null
+    var firestore : FirebaseFirestore? = null
+    var user : FirebaseUser? = null
+    lateinit var foodlist: ArrayList<FoodList>
+
+    lateinit var foodindex: String
     lateinit var notificationManager: NotificationManager
     override fun onReceive(context: Context, intent: Intent) {
+        foodlist = arrayListOf<FoodList>()
+        // 파이어베이스 인증 객체
+        auth = FirebaseAuth.getInstance()
+        user = auth!!.currentUser
+        // 파이어스토어 인스턴스 초기화
+        firestore = FirebaseFirestore.getInstance()
         notificationManager = context.getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
 
         createNotificationChannel(context)
@@ -45,7 +65,7 @@
         }
     }
 
-    private fun deliverNotification(context: Context){
+    private fun deliverNotification(context: Context) {
         val contentIntent = Intent(context, FoodListActivity::class.java)
         val contentPendingIntent = PendingIntent.getActivity(
             context,
@@ -60,15 +80,52 @@
              */
         )
 
-        val builder1 = NotificationCompat.Builder(context, CHANNEL_ID)
-            .setSmallIcon(R.drawable.ic_launcher_foreground) // 아이콘
-            .setContentTitle("FFF") // 제목
-            .setContentText("냉장고") // 내용
-            .setContentIntent(contentPendingIntent)
-            .setPriority(NotificationCompat.PRIORITY_HIGH)
-            .setAutoCancel(true)
-            .setDefaults(NotificationCompat.DEFAULT_ALL)
-        notificationManager?.notify(NOTIFICATION_ID, builder1.build())
+        firestore?.collection("user")?.document(user!!.uid)?.collection("myfridge")
+            ?.get()
+            ?.addOnCompleteListener { task ->
+                if (task.result?.size() != 0) {
+                    var count = 0
+                    var doc = task.result.documents?.get(0)
+                    foodindex = doc?.get("index").toString()
+
+                    firestore?.collection("fridge")?.document("$foodindex")
+                        ?.collection("food")
+                        ?.get()
+                        ?.addOnSuccessListener() { task ->
+                            count = task.size()
+
+                            for (i in 0 until task.size()){
+                                var doc = task.documents?.get(i)
+                                var dates = doc.get("deadline").toString()
+                                var formatter = SimpleDateFormat("yyyy.MM.dd")
+                                var nowdate = LocalDate.now().format(
+                                    DateTimeFormatter.ofPattern(
+                                        "yyyy.MM.dd"
+                                    )
+                                )
+                                var date = formatter.parse(dates).time
+                                var day = formatter.parse(nowdate).time
+                                var d_day = (date - day)/ (60 * 60 * 24 * 1000)
+                                if (d_day.toInt() < 3){
+                                    var name = firestore?.collection("fridge")?.document("$foodindex")
+                                        ?.collection("food")?.document("name")?.get().toString()
+
+                                    Log.d("성공:", "${d_day.toString()}")
+                                    val builder1 = NotificationCompat.Builder(context, CHANNEL_ID)
+                                        .setSmallIcon(R.drawable.ic_launcher_foreground) // 아이콘
+                                        .setContentTitle("FFF") // 제목
+
+                                        .setContentText(name+"의 유통기한이 하루 남았습니다!") // 내용
+                                        .setContentIntent(contentPendingIntent)
+                                        .setPriority(NotificationCompat.PRIORITY_HIGH)
+                                        .setAutoCancel(true)
+                                        .setDefaults(NotificationCompat.DEFAULT_ALL)
+                                    // Log.d("성공:", "${foodlist.get(0).name.toString()}")
+                                    notificationManager?.notify(NOTIFICATION_ID, builder1.build())
+                                }
+                            }
+                        }
+                }
 
     }
 
Index: .idea/deploymentTargetDropDown.xml
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
deleted file mode 100644
--- a/.idea/deploymentTargetDropDown.xml	(revision 5ee5066e244675fa357a364cefc1d87c3d7a5c93)
+++ /dev/null	(revision 5ee5066e244675fa357a364cefc1d87c3d7a5c93)
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="deploymentTargetDropDown">
-    <runningDeviceTargetSelectedWithDropDown>
-      <Target>
-        <type value="RUNNING_DEVICE_TARGET" />
-        <deviceKey>
-          <Key>
-            <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="$USER_HOME$/.android/avd/Pixel_4_API_30_2.avd" />
-          </Key>
-        </deviceKey>
-      </Target>
-    </runningDeviceTargetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2022-11-28T15:22:51.073426Z" />
-  </component>
-</project>
\ No newline at end of file
